# Static resources and Swagger
micronaut.router.static-resources.swagger.paths=classpath:META-INF/swagger
micronaut.application.name=token-processor
micronaut.router.static-resources.swagger-ui.mapping=/swagger-ui/**
micronaut.router.static-resources.swagger-ui.paths=classpath:META-INF/swagger/views/swagger-ui
micronaut.router.static-resources.swagger.mapping=/swagger/**

# Database (commented out)
#datasources.default.password=${DB_PASSWORD}
#datasources.default.dialect=${DIALECT:H2}
#datasources.default.url=${JDBC_URL:jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE}
#datasources.default.username=${DB_USER_NAME:sa}
#datasources.default.driver-class-name=${DB_DRIVER:org.h2.Driver}
#jpa.default.properties.hibernate.hbm2ddl.auto=${DDL_AUTO:update}

# OpenAPI and Server Configurations
micronaut.openapi.enabled=${OPENAPI_ENABLED:true}
micronaut.openapi.controller-annotations=${OPENAPI_CONTROLLER_ANNOTATIONS:true}
micronaut.server.port=${SERVER_PORT:8085}
jackson.property-naming-strategy=SNAKE_CASE

# CORS Configuration (optional)
#micronaut.server.cors.enabled=false
#micronaut.server.cors.configurations.mycorsconfig.allowed-origins=*
#micronaut.server.cors.configurations.mycorsconfig.allowed-methods=["GET", "POST", "PUT", "DELETE", "OPTIONS"]
#micronaut.server.cors.configurations.mycorsconfig.allowed-headers=["Content-Type", "Authorization"]

# RabbitMQ Configurations
rabbitmq.exchange.token=token-exchange
rabbitmq.routingkey.token=token-routing-key

# Micronaut RabbitMQ Client Configurations
micronaut.rabbitmq.client.default.addresses=${RABBITMQ_URI:localhost:5672}
micronaut.rabbitmq.client.default.username=guest
micronaut.rabbitmq.client.default.password=guest
